services:
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://host.docker.internal:5432/keycloak_db
      - KC_DB_USERNAME=keycloak_user
      - KC_DB_PASSWORD=keycloak_password
      - KC_DB_SCHEMA=public
      - KC_DB_MIGRATION_STRATEGY=update
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=localhost
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_LOG_LEVEL=DEBUG
    ports:
      - "8080:8080"
    command: start-dev
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - /d/vkr/arts-photo:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio_data:

networks:
  app-network:
    driver: bridge

#  docker exec -it minio /usr/bin/mc alias set myminio http://localhost:9000 minioadmin minioadmin
#  docker exec -it minio /usr/bin/mc policy set public myminio/arts-photo
#  docker exec -it minio /usr/bin/mc anonymous set public myminio/arts-photo
