spring.application.name=arts

#Data Source Properties
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://localhost:5432/arts
spring.datasource.username = postgres
spring.datasource.password = postgres

#JPA Properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql = TRUE
spring.jpa.properties.hibernate.show_sql = TRUE
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.open-in-view = false
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = validate

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/arts-realm

server.port=8081
logging.level.org.springframework.security = DEBUG
logging.level.org.example.arts = DEBUG

#aws.s3.bucket=your-bucket-name
#aws.s3.bucket.region=eu-central-1
#aws.s3.bucket.access-key=YOUR_AWS_ACCESS_KEY
#aws.s3.bucket.secret-key=YOUR_AWS_SECRET_KEY

# AWS S3 Configuration
#aws.s3.bucket=your-s3-bucket-name
#aws.s3.region=eu-central-1
#cloud.aws.credentials.access-key=admin
#cloud.aws.credentials.secret-key=admin
  # e.g., eu-central-1

# AWS S3 Configuration (??? MinIO)
aws.s3.bucket-name=arts-photo
aws.s3.region=eu-central-1

# ??????? ?????? MinIO
cloud.aws.credentials.access-key=minioadmin
cloud.aws.credentials.secret-key=minioadmin

# ????????? ????????????? Endpoint URL ??? MinIO
aws.s3.endpoint-url=http://localhost:9000

s3.arts.prefix=arts/
s3.avatars.prefix=avatars/


#spring:
#datasource:
#url: jdbc:postgresql://localhost:5432/arts_db
#username: postgres
#password: password
#jpa:
#hibernate:
#ddl-auto: update
#show-sql: true
#security:
#oauth2:
#resourceserver:
#jwt:
#issuer-uri: http://localhost:8080/realms/arts-realm
#jwk-set-uri: http://localhost:8080/realms/arts-realm/protocol/openid-connect/certs
#server:
#port: 8081